@{
    ViewData["Title"] = "Index";
    var counter = (ViewBag.PageNumber - 1) * ViewBag.PageSize;
    var pagedList = (IPagedList)ViewBag.Requests;
}

@using X.PagedList.Mvc.Core; @*import this so we get our HTML Helper*@
@using X.PagedList; @*import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@using X.PagedList.Mvc.Core.Fluent
@using X.PagedList.Web.Common



<div class="w-100 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <div class="d-flex align-items-center justify-content-md-end">
                <div class="pr-1 mb-3 mr-2 mb-xl-0">
                    <button type="button" class="btn btn-sm bg-white btn-icon-text border" id="export" onclick="exportTableToExcel('tblData')"><i class="typcn typcn-arrow-forward-outline mr-2"></i>Export</button>
                </div>

            </div>

            <div class="table-responsive">
                <table class="table" id="tblData">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>User Image</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>House Title</th>
                            <th>Message</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (UserBookingMessage message in ViewBag.Requests)
                        {
                            counter++;
                            <tr>
                                <td>@counter</td>
                                <td>
                                    <img width="50" class="border-circle" src="~/Uploads/Users/@message.AppUser.UserPhoto" />

                                </td>
                                <td>@message.Fullname</td>
                                <td>@message.Email</td>
                                <td> <a asp-action="edit" asp-controller="house" asp-route-id="@message.House?.Id"> @message.House?.Title</a> </td>
                                <td>@message.Message</td>
                                <td>

                                    @if(!message.IsReplied){
                                    <a class="reply" asp-action="ReplyToBookingRequest" asp-controller="house" asp-route-id="@message.Id"><i style="font-size:26px" class="mdi mdi-reply text-success"></i></a>
                                    }
                                    else{
                                        <a class="replied" asp-action="GetReplyMessage" asp-controller="house" asp-route-id="@message.Id"><i style="font-size:26px" class="mdi mdi-receipt"></i></a>
                                    }
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
                <div>
                    <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
                    @Html.PagedListPager(pagedList, page => Url.Action("BookingRequest", new { page }))

                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script src="~/admin/js/Main.js"></script>
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        function exportTableToExcel(tableID, filename = '') {
            var downloadLink;
            var dataType = 'application/vnd.ms-excel';
            var tableSelect = document.getElementById(tableID);
            var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');

            // Specify file name
            filename = filename ? filename + '.xls' : 'excel_data.xls';

            // Create download link element
            downloadLink = document.createElement("a");

            document.body.appendChild(downloadLink);

            if (navigator.msSaveOrOpenBlob) {
                var blob = new Blob(['\ufeff', tableHTML], {
                    type: dataType
                });
                navigator.msSaveOrOpenBlob(blob, filename);
            } else {
                // Create a link to the file
                downloadLink.href = 'data:' + dataType + ', ' + tableHTML;
                // Setting the file name
                downloadLink.download = filename;

                //triggering the function
                downloadLink.click();
            }
        }
    </script>

}


